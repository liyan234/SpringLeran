<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--xmlns:context="http://www.springframework.org/schema/context"
           xmlns:aop="http://www.springframework.org/schema/aop"
                                                             注解开发的导入 -->

    <!-- 开启注解支持 -->
    <context:annotation-config/>

    <bean id="dog" class="com.li.pojo.Dog"></bean>
    <bean id="cat" class="com.li.pojo.Cat"></bean>
    <bean id="person" class="com.li.pojo.Person"></bean>
   <!--scope作用域 singleton就是Spring容器将创建该bean定义所定义的类的一个并且仅一个实例
        默认也是singleton  就是在代码调用的时候就只创建一个对应的实例，每一个引用都指向这个实例-->
  <!--  <bean id="person" class="com.li.pojo.Person" autowire="byName" scope="singleton">
        <property name="name" value="xx"/>
    </bean> -->

    <!-- prototype  再代码调用的时候，每一次getBean的时候都会创建一个对应的实例，一个引用一个实例-->
  <!--  <bean id="person2" class="com.li.pojo.Person" autowire="byName" scope="prototype">
        <property name="name" value="xx"/>
    </bean> -->

</beans>